set nocompatible
source $VIMRUNTIME/vimrc_example.vim
source $VIMRUNTIME/mswin.vim
behave mswin

"***ace add begin***
colorscheme elflord
set guifont=Courier_New:h14:cANSI
"***ace add end***

set diffexpr=MyDiff()
function MyDiff()
  let opt = '-a --binary '
  if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
  if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
  let arg1 = v:fname_in
  if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
  let arg2 = v:fname_new
  if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
  let arg3 = v:fname_out
  if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
  let eq = ''
  if $VIMRUNTIME =~ ' '
    if &sh =~ '\<cmd'
      let cmd = '""' . $VIMRUNTIME . '\diff"'
      let eq = '"'
    else
      let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
    endif
  else
    let cmd = $VIMRUNTIME . '\diff'
  endif
  silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3 . eq
endfunction

let mapleader="\<space>"
"<<<map
map s <nop>
"map S :w<CR>
map Q :q
"map <C-e> :only<CR>
map <LEADER>s :w<CR>
map <LEADER>q :q
"open quickerfix
map <LEADER>c :cw<CR>

"这段脚本添加后可以使用alt键像ctrl键一样映射。
for i in range(97,122)
  let c = nr2char(i)
  exec "map \e".c." <M-".c.">"
  exec "map! \e".c." <M-".c.">"
endfor
"jump to define
map <A-s> <C-o>
map <A-d> <C-]>
map <A-f> <C-i>
"高亮搜索
noremap <A-m> <S-*>
noremap <A-n> <S-#>

map <LEADER>e :only<CR>
map <LEADER>rc :vs ~/.vimrc<CR>
map <LEADER>sr :source ~/.vimrc<CR>
map <LEADER>tm :vs ~/.tmux.conf<CR>
map ; :
noremap K 5k
noremap J 5j
noremap O $
noremap U 0
noremap H 7h
noremap L 7l
map <C-h> :0<CR>
map <C-l> :$<CR>
noremap = nzz
noremap - Nzz
">>>
"<<ctrl-c,ctrl-v
">>>
"<<<搜索
set hlsearch
exec "nohlsearch"
set incsearch
set ignorecase
set smartcase
set nowrapscan
noremap <LEADER><CR> :nohlsearch<CR>
">>>
"<<<分屏map
map sl :set splitright<CR>:vsplit<CR>
map sh :set nosplitright<CR>:vsplit<CR>
map sk :set nosplitbelow<CR>:split<CR>
map sj :set splitbelow<CR>:split<CR>
map sv <C-w>t<C-w>H
map sp <C-w>t<C-w>K
"map sk :split
map sl :set splitright<CR>:vsplit<CR>
"map sl :vsplit
"map <LEADER>l <C-w>l
map <LEADER>l <C-w>w
map <LEADER>k <C-w>k
map <LEADER>h <C-w>h
map <LEADER>j <C-w>j
map <up> :res +5<CR>
map <down> :res -5<CR>
map <left> :vertical resize-5<CR>
map <right> :vertical resize+5<CR>
"标签设置
map fn :tabnew<CR>
map fc :tabclose<CR>
map fy :tabonly<CR>
map fj :tabn<CR>
map fk :tabp<CR>
map fu :tabfirst<CR>
map fo :tablast<CR>
" Move the tabs with tmn and tmi
map fh :-tabmove<CR>
map fl :+tabmove<CR>
">>>
"<<<常规设置
set nocompatible
filetype on
filetype indent on
filetype plugin on
filetype plugin indent on
set mouse=nv
set encoding=utf-8
let &t_ut=''
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab
set nu
set relativenumber
syntax enable
syntax on
set cursorline
"set cursorcolumn
"set smarttab
set nobackup
set ruler
set autoindent
set smartindent
set cindent
set clipboard=unnamed
set noswapfile
set paste
set confirm
set t_Co=256
set cmdheight=1
"list设置显示行尾的空格和tab
set list
set listchars=tab:>-,trail:-
"set backspace=indent,eol,start
set showcmd
"<<<?????"
"set scrolloff=5
"set tw=0
"set indentexpr=
">>>
"set foldmethod=indent
"set foldlevel=99
"let &t_SI = "\<Esc>]50;CursorShape=1\x7"
"let &t_SR = "\<Esc>]50;CursorShape=2\x7"
"let &t_EI = "\<Esc>]50;CursorShape=0\x7"
set laststatus=2
"set autochdir
au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
">>> 

"winpos 100 100
"set lines=80 columns=100


"  Gvim中文菜单乱码解决方案

" 设置文件编码格式
set encoding=utf-8
set fileencodings=utf-8,chinese,latin-1,gbk,gb18030,gk2312
if has("win32")
 set fileencoding=chinese
else
 set fileencoding=utf-8
endif

"解决菜单乱码
source $VIMRUNTIME/delmenu.vim
source $VIMRUNTIME/menu.vim

"解决consle提示信息输出乱码
language messages zh_CN.utf-8


" ===                                                                                         
" === VBUNDLE                                                                             
" ===                                                                                     
filetype off                  " required                                                  
set shellslash                                                                                           
set rtp+=J:\software_az\gvim\bundle\Vundle.vim

call vundle#begin('J:\software_az\gvim\bundle')                                                                       
"Plugin 'hzchirs/vim-material'                                                            
Plugin 'VundleVim/Vundle.vim'                                                             
Plugin 'vim-scripts/taglist.vim'                                                          
Plugin 'scrooloose/nerdtree'  
Plugin 'tiagofumo/vim-nerdtree-syntax-highlight'
"Plugin 'Xuyuanp/nerdtree-git-plugin'
"Plugin 'vim-scripts/cscope.vim'                                                           
Plugin 'wesleyche/SrcExpl'                                                                
"Plugin 'altercation/vim-colors-solarized'                                                 
""Plugin 'tomasr/molokai'                                                                  
Plugin 'Lokaltog/vim-powerline'                                                           
"Plugin 'vim-airline/vim-airline'                                                         
"Plugin 'ycm-core/YouCompleteMe'                                                          
"Plugin 'kien/ctrlp.vim'                                                                   
"Plugin 'tpope/vim-fugitive'                                                               
"Plugin 'airblade/vim-gitgutter'                                                           
Plugin 'Yggdroot/indentLine'                                                              
"Plugin 'terryma/vim-smooth-scroll'                                                        
"Plugin 'godlygeek/tabular'                                                                
"Plugin 'plasticboy/vim-markdown'                                                          
"Plugin 'inkarkat/vim-ingo-library'                                                        
"Plugin 'inkarkat/vim-mark'                                                                
" All of your Plugins must be added before the following line                             
call vundle#end()            " required
 
filetype plugin indent on    " required                                                   
" Brief help                                                                              
" :PluginList       - lists configured plugins                                            
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate        
" :PluginSearch foo - searches for foo; append `!` to refresh local cache                 
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve remov
">>>
" ===
" ===	FUGITIVE 
" ===
map c1 o<ESC>i/*OV ace.li fix <C-R>C @<C-R>=strftime("20%y%m%d")<CR> begin*/<ESC>
map c2 o<ESC>i/*OV ace.li fix <C-R>C @<C-R>=strftime("20%y%m%d")<CR> end*/<ESC>
map c3 $a    //OV ace.li add it @<C-R>=strftime("20%y%m%d")<CR> for <C-R>C <ESC>
map x1 o<ESC>i<!-- OV ace.li fix <C-R>C @<C-R>=strftime("20%y%m%d")<CR> begin --><ESC>
map x2 o<ESC>i<!-- OV ace.li fix <C-R>C @<C-R>=strftime("20%y%m%d")<CR> end --><ESC>
map x3 $a    <!-- OV ace.li add it @<C-R>=strftime("20%y%m%d")<CR> for <C-R>C --> <ESC>
vmap <C-c> "+y
nmap <C-v> "+p
" ===
" === CTAGS
" ===
set tags=./tags,./TAGS,tags;~,TAGS;~
" ===
" === TAGLIST
" ===
"不同时显示多个文件的tag，仅显示一个
let Tlist_Show_One_File=1
"taglist为最后一个窗口时退出vim
let Tlist_Exit_OnlyWindow=1
"设置ctags路径
let Tlist_Ctags_Cmd='/usr/bin/ctags'
"启动vim后自动打开taglist窗口
let Tlist_Auto_Open=0
"taglist窗口显示在右侧，缺省为左侧
let Tlist_Use_Right_Window=0
"设置taglist窗口大小
let Tlist_WinHeight=100
let Tlist_WinWidth=40
"更新ctags标签文件快捷键设置
"noremap <F6> :!ctags -R
"设置taglist打开关闭的快捷键
noremap <F7> :TlistToggle<CR>
" ===
" === NERDTree
" ===
map ff :NERDTreeToggle<CR>
let NERDTreeMapOpenExpl = ""
let NERDTreeMapUpdir = ""
let NERDTreeMapUpdirKeepOpen = "l"
let NERDTreeMapOpenSplit = ""
let NERDTreeOpenVSplit = ""
let NERDTreeMapActivateNode = "i"
let NERDTreeMapOpenInTab = "o"
let NERDTreeMapPreview = ""
let NERDTreeMapCloseDir = "n"
let NERDTreeMapChangeRoot = "y"
let NERDTreeWinPos='right'
let NERDTreeShowHidden=1
let NERDTreeShowBookmarks=1

" ===
" === SRCEXPL
" ===
"map <F8> :SrcExplToggle<CR> 
" // Set the height of Source Explorer window 
let g:SrcExpl_winHeight = 8 
" // Set 100 ms for refreshing the Source Explorer 
let g:SrcExpl_refreshTime = 100 
" // Set "Enter" key to jump into the exact definition context 
let g:SrcExpl_jumpKey = "<ENTER>" 
" // Set "Space" key for back from the definition context 
let g:SrcExpl_gobackKey = "<SPACE>" 
" // In order to avoid conflicts, the Source Explorer should know what plugins except
" // itself are using buffers. And you need add their buffer names into below list
" // according to the command ":buffers!"
let g:SrcExpl_pluginList = [
        \ "__Tag_List__",
        \ "_NERD_tree_",
        \ "Source_Explorer"
    \ ]

" // The color schemes used by Source Explorer. There are five color schemes
" // supported for now - Red, Cyan, Green, Yellow and Magenta. Source Explorer
" // will pick up one of them randomly when initialization.
let g:SrcExpl_colorSchemeList = [
        \ "Red",
        \ "Cyan",
        \ "Green",
        \ "Yellow",
        \ "Magenta"
    \ ]

" // Enable/Disable the local definition searching, and note that this is not 
" // guaranteed to work, the Source Explorer doesn't check the syntax for now. 
" // It only searches for a match with the keyword according to command 'gd' 
let g:SrcExpl_searchLocalDef = 1 

" // Workaround for Vim bug @https://goo.gl/TLPK4K as any plugins using autocmd for
" // BufReadPre might have conflicts with Source Explorer. e.g. YCM, Syntastic etc.
let g:SrcExpl_nestedAutoCmd = 1

" // Do not let the Source Explorer update the tags file when opening 
let g:SrcExpl_isUpdateTags = 0 

" // Use 'Exuberant Ctags' with '--sort=foldcase -R .' or '-L cscope.files' to 
" // create/update the tags file 
let g:SrcExpl_updateTagsCmd = "ctags --sort=foldcase -R ." 

" // Set "<F12>" key for updating the tags file artificially 
let g:SrcExpl_updateTagsKey = "<F12>" 

" // Set "<F3>" key for displaying the previous definition in the jump list 
let g:SrcExpl_prevDefKey = "<F3>" 

" // Set "<F4>" key for displaying the next definition in the jump list 
let g:SrcExpl_nextDefKey = "<F4>" 

" ===
" === CTRLP
" ===
"<c-j>, <c-k>   - 在搜索结果里上下移动
"<c-v>, <c-x>   - 以水平或垂直的方式将光标选择的文件打开
"<c-n>, <c-p>   - 可以选择上一个或下一个搜索条件
"<c-y>          - 根据你的搜索路径，如果文件不存在，可以用该命令创建一个文件，包
""""""""""""""""""""""""""""""
"vim-nerdtree-syntax-highlight settings
""""""""""""""""""""""""""""""
"Highlight full name (not only icons). You need to add this if you don't have vim-devicons and want highlight.
let g:NERDTreeFileExtensionHighlightFullName = 1
let g:NERDTreeExactMatchHighlightFullName = 1
let g:NERDTreePatternMatchHighlightFullName = 1

"Highlight full name (not only icons). You need to add this if you don't have vim-devicons and want highlight.
let g:NERDTreeHighlightFolders = 1

"highlights the folder name
let g:NERDTreeHighlightFoldersFullName = 1

"you can add these colors to your .vimrc to help customizing
let s:brown = "905532"
let s:aqua =  "3AFFDB"
let s:blue = "689FB6"
let s:darkBlue = "44788E"
let s:purple = "834F79"
let s:lightPurple = "834F79"
let s:red = "AE403F"
let s:beige = "F5C06F"
let s:yellow = "F09F17"
let s:orange = "D4843E"
let s:darkOrange = "F16529"
let s:pink = "CB6F6F"
let s:salmon = "EE6E73"
let s:green = "8FAA54"
let s:Turquoise = "40E0D0"
let s:lightGreen = "31B53E"
let s:white = "FFFFFF"
let s:rspec_red = "FE405F"
let s:git_orange = "F54D27"
let s:gray = "808A87"

let g:NERDTreeExtensionHighlightColor = {} " this line is needed to avoid error
let g:NERDTreeExtensionHighlightColor['o'] = s:gray " sets the color of o files to blue
let g:NERDTreeExtensionHighlightColor['h'] = s:blue " sets the color of h files to blue
let g:NERDTreeExtensionHighlightColor['c'] = s:green " sets the color of c files to blue
let g:NERDTreeExtensionHighlightColor['cpp'] = s:green " sets the color of cpp files to blue
let g:NERDTreeExtensionHighlightColor['c++'] = s:green " sets the color of c++ files to blue
""""""""""""""""""""""""""""""
"vim-nerdtree-syntax-highlight settings end
""""""""""""""""""""""""""""""
"confg key:F2 Toggle Menu and Toolbar
set guioptions-=m
set guioptions-=T
map <silent> <F2> :if &guioptions =~# 'T' <Bar>
        \set guioptions-=T <Bar>
        \set guioptions-=m <bar>
    \else <Bar>
        \set guioptions+=T <Bar>
        \set guioptions+=m <Bar>
    \endif<CR>
