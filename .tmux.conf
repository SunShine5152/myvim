##################
# 从其他地方拷贝文字到tmux下时，默认是tmux的右键菜单，按住Shift再右键就会调出原有的菜单
##################
# Send prefix
set-option -g prefix M-a
unbind M-a
bind M-a send-prefix
# 从tmux v1.6版起，支持设置第二个指令前缀
set-option -g prefix2 ` # 设置一个不常用的`键作为指令前缀，按键更快些

# 插件
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @continuum-save-interval '15'
set -g @continuum-restore 'on'
set -g @resurrect-capture-pane-contents 'on'

# Other config ...
run -b '~/.tmux/plugins/tpm/tpm'

# reload tmux conf
unbind r
bind r source-file ${HOME}/.tmux.conf \; display-message "source-file reloaded"

# 更改分割水平和垂直窗口按键
unbind '"'
bind v split-window -v
unbind %
bind h split-window -h

# Use Alt-hjkl keys to switch panes 
bind -n M-l select-pane -L
bind -n M-h select-pane -R
bind -n M-k select-pane -U
bind -n M-j select-pane -D

# 面板调整大小
# 绑定Ctrl+hjkl键为面板上下左右调整边缘的快捷指令
bind -n C-k resizep -U 10 # 绑定Ctrl+k为往↑调整面板边缘10个单元格
bind -n C-j resizep -D 10 # 绑定Ctrl+j为往↓调整面板边缘10个单元格
bind -n C-h resizep -L 10 # 绑定Ctrl+h为往←调整面板边缘10个单元格
bind -n C-l resizep -R 10 # 绑定Ctrl+l为往→调整面板边缘10个单元格

# Shift arrow to switch windows
#bind -n S-Left previous-window
#bind -n S-Right next-window

# Mouse mode
#set -g mode-mouse on
set -g mouse on
set -g monitor-activity on
set -g xterm-keys on
# 开启鼠标点击选择窗格
#set -g mouse-select-pane on
# 开启鼠标点击选择窗口
#set -g mouse-select-window on
# 开启鼠标调节窗格大小
#set -g mouse-resize-pane on

#set -g mouse-resize-pane on
#set -g mouse-select-pane on
#set -g mouse-select-window on

set -g history-limit 100000

set-window-option -g mode-keys vi

# ------ 复制粘贴 ----------

# 复制模式向 vi 靠拢

#旧版本：
#bind -t vi-copy v begin-selection  # 绑定v键为开始选择文本
#bind -t vi-copy y copy-selection # 绑定y键为复制选中文本

# 新版本：
#bind -T copy-mode-vi v send -X begin-selection # 开始复制
#bind -T copy-mode-vi y send -X copy-selection # 复制剪切板
#bind p pasteb # 绑定p键为粘贴文本（p键默认用于进入上一个窗口，不建议覆盖）

# ------ 其他 -----------
#设置窗口面板起始序号
set -g base-index 1 # 设置窗口的起始下标为1
set -g pane-base-index 1 # 设置面板的起始下标为1
set -s focus-events on
set-window-option -g automatic-rename on
set-window-option -g monitor-activity on


# ----- 状态栏 ----------

set -wg window-status-format " #I #W " # 状态栏窗口名称格式
set -wg window-status-current-format " #I:#W#F " # 状态栏当前窗口名称格式(#I：序号，#w：窗口名称，#F：间隔符)
set -wg window-status-separator "" # 状态栏窗口名称之间的间隔
set -g message-style "bg=#202529, fg=#91A8BA" # 指定消息通知的前景、后景色


# 自定义状态栏
set -g status-interval 1 # 状态栏刷新时间
set -g status-justify left # 状态栏列表左对齐
setw -g monitor-activity on # 非当前窗口有内容更新时在状态栏通知
# ----- linux ------
set -g status-left "<ace #W>" # 状态栏左侧内容
set -g status-fg yellow # 设置状态栏前景黄色
set -g status-style "bg=black, fg=yellow" # 状态栏前景背景色

set -g status-right 'ace@machine #{continuum_status}' # 状态栏右侧内容
set -g status-left-length 300 # 状态栏左边长度300
set -g status-right-length 500 # 状态栏左边长度500

set -wg window-status-current-style "bg=black" # 状态栏当前窗口名称的样式
set -wg window-status-current-style "bg=red" # 状态栏当前窗口名称的样式
set -wg window-status-last-style "fg=red" # 状态栏最后一个窗口名称的样式



